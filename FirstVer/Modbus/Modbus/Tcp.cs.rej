diff a/Modbus/Modbus/Tcp.cs b/Modbus/Modbus/Tcp.cs	(rejected hunks)
@@ -20,6 +20,8 @@
         public NetworkStream nStream = null;
 
 
+
+
         public void AcceptMessage()                                             /*接收数据*/
         {
             string sTemp; //临时存储读取的字符串
@@ -42,12 +44,12 @@
                 catch
                 {
                     MessageBox.Show("Disconnected !");
-                    TcpInit();
+                    TcpInit();              
                 }
             }
         }
 
-        private void TCP_Start_Click(object sender, EventArgs e)
+        private void TCP_Startbtn_Click(object sender, EventArgs e)
         {
             try
             {
@@ -56,26 +58,17 @@
                 {
                     IPP = new IPEndPoint(IPAddress.Parse(myIPtextBox.Text), int.Parse(tcpListenPortTextBox.Text));
                     socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
+                    //TcpData data = new TcpData();                                           /* 发送帧初始化 */   
                     socket.Connect(IPP);
                     if (socket.Connected)                                                   /*连接成功*/
                     {
-                        nStream = new NetworkStream(socket);
-                        tReader = new StreamReader(nStream);
-                        wReader = new StreamWriter(nStream);
-                        tAcceptMsg = new Thread(new ThreadStart(this.AcceptMessage));
-                        tAcceptMsg.Start();
-                        bConnected = true;
-                        Connection.Text = "Already Connected";
-                        TCP_Startbtn.Text = "Disconnect";
-                        myIPtextBox.ReadOnly = true;
-                        tcpListenPortTextBox.ReadOnly = true;
-                        //TCP_Startbtn.Enabled = false;
-                        //MessageBox.Show("Connected !");
+                        Connect_Init_Tcp();
+                        TcpSendDataInit();                                             /* 发送帧初始化 */
                     }
                 }
                 else if (TCP_Startbtn.Text == "Disconnect")
                 {
-                    Disconnect();
+                    Disconnect_Tcp();
                     TcpInit();
                 }
             }
@@ -113,16 +106,47 @@
                     {
                         MessageBox.Show("Connect to " + myIPtextBox.Text + "failed !");
                         TcpInit();
-                        Disconnect();
+                        Disconnect_Tcp();
                     }
                 }
             }
             
         }
-    
 
+        private void Tcp_Sendbtn_Click(object sender, System.EventArgs e)
+        {
+            if (bConnected)
+            {
+                try
+                {
+                    //richTextBox2_KeyPress()和AcceptMessage()
+                    //都将向richTextBox1写字符，可能访问有冲突，
+                    //所以，需要多线程互斥
+                    lock (this)
+                    {
+                        string s = TcpDataPacking();
+
+                        RecvRichTextBox.Text = "Client：" + s + RecvRichTextBox.Text;
+                        //客户机聊天信息写入网络流，以便服务器接收
 
-        public void Disconnect()
+                        wReader.WriteLine(s);
+                        //清理当前缓冲区数据，使所有缓冲数据写入基础设备
+                        // wReader.Flush();
+                        //发送成功后，清空输入框并聚集之
+                        SendRichTextBox.Text = "";
+                        //RecvRichTextBox.Focus();
+                    }
+                }
+                catch
+                {
+                    MessageBox.Show("Connect to " + myIPtextBox.Text + "failed !");
+                    TcpInit();
+                    Disconnect_Tcp();
+                }
+            }
+        }
+
+        private void Disconnect_Tcp()
         {                 
             //禁止当前Socket上的发送与接收
             socket.Shutdown(SocketShutdown.Both);
@@ -131,6 +155,20 @@
             tAcceptMsg.Abort();
         }
 
+        private void Connect_Init_Tcp()
+        {
+            nStream = new NetworkStream(socket);
+            tReader = new StreamReader(nStream);
+            wReader = new StreamWriter(nStream);
+            tAcceptMsg = new Thread(new ThreadStart(this.AcceptMessage));
+            tAcceptMsg.Start();
+            bConnected = true;
+            Connection.Text = "Already Connected";
+            TCP_Startbtn.Text = "Disconnect";
+            myIPtextBox.ReadOnly = true;
+            tcpListenPortTextBox.ReadOnly = true;
+        }
+
         private void Modbus_FormClosing(object sender, FormClosingEventArgs e)
         {
             try
